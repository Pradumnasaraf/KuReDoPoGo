services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    image: go-app
    ports:
      - 8080:8080
    env_file:
      - .env.example
    environment:
      POSTGRES_URI: postgres://postgres:password@postgres:5432/mydb?sslmode=disable
      REDIS_URI: redis:6379
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - path: .
          action: rebuild

  postgres:
    container_name: postgres
    image: postgres:13
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:7.4
    volumes:
      - redisdata:/data
    ports:
      - 6379:6379 
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  postgres_data:
  redisdata:

networks:
  go-network:
    driver: bridge